version: '3.8'

services:
  # Backend services
  db:
    image: postgres:15
    container_name: postgress_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: app/Dockerfile
    container_name: fastapi_appp
    command: >
      bash -c "
        python -m alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000
      "
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy

  # Frontend service
  frontend:
    build:
      context: ./frontiend
    container_name: vue_appp
    restart: unless-stopped
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # Папка с SSL сертификатами
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: